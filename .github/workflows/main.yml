name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: myspace-ecs
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          echo "${{ secrets.PEM_FILE }}" | base64 --decode > private_key.pem
          chmod 600 private_key.pem
          mkdir -p ~/.ssh
          ssh-keyscan 18.159.211.121 >> ~/.ssh/known_hosts
          chmod 644 known_hosts
        env:
          PEM_FILE: ${{ secrets.PEM_FILE }}
      
      - name: Deploy to EC2
        run: |
          scp -v -i private_key.pem deploy.sh ubuntu@18.159.211.121:/tmp
          ssh -v -i private_key.pem ubuntu@18.159.211.121 'bash -s' < /tmp/deploy.sh ${{ steps.login-ecr.outputs.registry }}/myspace-ecs:${{ github.sha }}
          rm -f private_key.pem
